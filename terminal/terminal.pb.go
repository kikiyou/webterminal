// Code generated by protoc-gen-go. DO NOT EDIT.
// source: terminal.proto

package terminal

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TerminalResize struct {
	Columns              int32    `protobuf:"varint,1,opt,name=columns,proto3" json:"columns,omitempty"`
	Rows                 int32    `protobuf:"varint,2,opt,name=rows,proto3" json:"rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TerminalResize) Reset()         { *m = TerminalResize{} }
func (m *TerminalResize) String() string { return proto.CompactTextString(m) }
func (*TerminalResize) ProtoMessage()    {}
func (*TerminalResize) Descriptor() ([]byte, []int) {
	return fileDescriptor_terminal_c2e4964124c47836, []int{0}
}
func (m *TerminalResize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TerminalResize.Unmarshal(m, b)
}
func (m *TerminalResize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TerminalResize.Marshal(b, m, deterministic)
}
func (dst *TerminalResize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TerminalResize.Merge(dst, src)
}
func (m *TerminalResize) XXX_Size() int {
	return xxx_messageInfo_TerminalResize.Size(m)
}
func (m *TerminalResize) XXX_DiscardUnknown() {
	xxx_messageInfo_TerminalResize.DiscardUnknown(m)
}

var xxx_messageInfo_TerminalResize proto.InternalMessageInfo

func (m *TerminalResize) GetColumns() int32 {
	if m != nil {
		return m.Columns
	}
	return 0
}

func (m *TerminalResize) GetRows() int32 {
	if m != nil {
		return m.Rows
	}
	return 0
}

type SessionRequest struct {
	// Types that are valid to be assigned to Command:
	//	*SessionRequest_Message
	//	*SessionRequest_Resize
	Command              isSessionRequest_Command `protobuf_oneof:"command"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SessionRequest) Reset()         { *m = SessionRequest{} }
func (m *SessionRequest) String() string { return proto.CompactTextString(m) }
func (*SessionRequest) ProtoMessage()    {}
func (*SessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_terminal_c2e4964124c47836, []int{1}
}
func (m *SessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequest.Unmarshal(m, b)
}
func (m *SessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequest.Marshal(b, m, deterministic)
}
func (dst *SessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequest.Merge(dst, src)
}
func (m *SessionRequest) XXX_Size() int {
	return xxx_messageInfo_SessionRequest.Size(m)
}
func (m *SessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequest proto.InternalMessageInfo

type isSessionRequest_Command interface {
	isSessionRequest_Command()
}

type SessionRequest_Message struct {
	Message []byte `protobuf:"bytes,1,opt,name=message,proto3,oneof"`
}
type SessionRequest_Resize struct {
	Resize *TerminalResize `protobuf:"bytes,2,opt,name=resize,proto3,oneof"`
}

func (*SessionRequest_Message) isSessionRequest_Command() {}
func (*SessionRequest_Resize) isSessionRequest_Command()  {}

func (m *SessionRequest) GetCommand() isSessionRequest_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *SessionRequest) GetMessage() []byte {
	if x, ok := m.GetCommand().(*SessionRequest_Message); ok {
		return x.Message
	}
	return nil
}

func (m *SessionRequest) GetResize() *TerminalResize {
	if x, ok := m.GetCommand().(*SessionRequest_Resize); ok {
		return x.Resize
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SessionRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SessionRequest_OneofMarshaler, _SessionRequest_OneofUnmarshaler, _SessionRequest_OneofSizer, []interface{}{
		(*SessionRequest_Message)(nil),
		(*SessionRequest_Resize)(nil),
	}
}

func _SessionRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SessionRequest)
	// command
	switch x := m.Command.(type) {
	case *SessionRequest_Message:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Message)
	case *SessionRequest_Resize:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Resize); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SessionRequest.Command has unexpected type %T", x)
	}
	return nil
}

func _SessionRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SessionRequest)
	switch tag {
	case 1: // command.message
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Command = &SessionRequest_Message{x}
		return true, err
	case 2: // command.resize
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TerminalResize)
		err := b.DecodeMessage(msg)
		m.Command = &SessionRequest_Resize{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SessionRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SessionRequest)
	// command
	switch x := m.Command.(type) {
	case *SessionRequest_Message:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Message)))
		n += len(x.Message)
	case *SessionRequest_Resize:
		s := proto.Size(x.Resize)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SessionResponse struct {
	Message              []byte   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionResponse) Reset()         { *m = SessionResponse{} }
func (m *SessionResponse) String() string { return proto.CompactTextString(m) }
func (*SessionResponse) ProtoMessage()    {}
func (*SessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_terminal_c2e4964124c47836, []int{2}
}
func (m *SessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionResponse.Unmarshal(m, b)
}
func (m *SessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionResponse.Marshal(b, m, deterministic)
}
func (dst *SessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionResponse.Merge(dst, src)
}
func (m *SessionResponse) XXX_Size() int {
	return xxx_messageInfo_SessionResponse.Size(m)
}
func (m *SessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SessionResponse proto.InternalMessageInfo

func (m *SessionResponse) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func init() {
	proto.RegisterType((*TerminalResize)(nil), "terminal.TerminalResize")
	proto.RegisterType((*SessionRequest)(nil), "terminal.SessionRequest")
	proto.RegisterType((*SessionResponse)(nil), "terminal.SessionResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TerminalClient is the client API for Terminal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TerminalClient interface {
	Session(ctx context.Context, opts ...grpc.CallOption) (Terminal_SessionClient, error)
}

type terminalClient struct {
	cc *grpc.ClientConn
}

func NewTerminalClient(cc *grpc.ClientConn) TerminalClient {
	return &terminalClient{cc}
}

func (c *terminalClient) Session(ctx context.Context, opts ...grpc.CallOption) (Terminal_SessionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Terminal_serviceDesc.Streams[0], "/terminal.terminal/Session", opts...)
	if err != nil {
		return nil, err
	}
	x := &terminalSessionClient{stream}
	return x, nil
}

type Terminal_SessionClient interface {
	Send(*SessionRequest) error
	Recv() (*SessionResponse, error)
	grpc.ClientStream
}

type terminalSessionClient struct {
	grpc.ClientStream
}

func (x *terminalSessionClient) Send(m *SessionRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *terminalSessionClient) Recv() (*SessionResponse, error) {
	m := new(SessionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TerminalServer is the server API for Terminal service.
type TerminalServer interface {
	Session(Terminal_SessionServer) error
}

func RegisterTerminalServer(s *grpc.Server, srv TerminalServer) {
	s.RegisterService(&_Terminal_serviceDesc, srv)
}

func _Terminal_Session_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TerminalServer).Session(&terminalSessionServer{stream})
}

type Terminal_SessionServer interface {
	Send(*SessionResponse) error
	Recv() (*SessionRequest, error)
	grpc.ServerStream
}

type terminalSessionServer struct {
	grpc.ServerStream
}

func (x *terminalSessionServer) Send(m *SessionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *terminalSessionServer) Recv() (*SessionRequest, error) {
	m := new(SessionRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Terminal_serviceDesc = grpc.ServiceDesc{
	ServiceName: "terminal.terminal",
	HandlerType: (*TerminalServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Session",
			Handler:       _Terminal_Session_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "terminal.proto",
}

func init() { proto.RegisterFile("terminal.proto", fileDescriptor_terminal_c2e4964124c47836) }

var fileDescriptor_terminal_c2e4964124c47836 = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x49, 0x2d, 0xca,
	0xcd, 0xcc, 0x4b, 0xcc, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0xec,
	0xb8, 0xf8, 0x42, 0xa0, 0xec, 0xa0, 0xd4, 0xe2, 0xcc, 0xaa, 0x54, 0x21, 0x09, 0x2e, 0xf6, 0xe4,
	0xfc, 0x9c, 0xd2, 0xdc, 0xbc, 0x62, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xd6, 0x20, 0x18, 0x57, 0x48,
	0x88, 0x8b, 0xa5, 0x28, 0xbf, 0xbc, 0x58, 0x82, 0x09, 0x2c, 0x0c, 0x66, 0x2b, 0x65, 0x73, 0xf1,
	0x05, 0xa7, 0x16, 0x17, 0x67, 0xe6, 0xe7, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x49,
	0x71, 0xb1, 0xe7, 0xa6, 0x16, 0x17, 0x27, 0xa6, 0xa7, 0x82, 0xf5, 0xf3, 0x78, 0x30, 0x04, 0xc1,
	0x04, 0x84, 0x8c, 0xb8, 0xd8, 0x8a, 0xc0, 0xb6, 0x80, 0xcd, 0xe0, 0x36, 0x92, 0xd0, 0x83, 0x3b,
	0x0c, 0xd5, 0x15, 0x1e, 0x0c, 0x41, 0x50, 0x95, 0x4e, 0x9c, 0x20, 0xf7, 0xe4, 0xe6, 0x26, 0xe6,
	0xa5, 0x28, 0x69, 0x73, 0xf1, 0xc3, 0x2d, 0x2b, 0x2e, 0xc8, 0xcf, 0x2b, 0x06, 0xbb, 0x16, 0xc5,
	0x36, 0xb8, 0x5d, 0x46, 0x01, 0x5c, 0x70, 0x5f, 0x0a, 0xb9, 0x70, 0xb1, 0x43, 0x35, 0x0a, 0x21,
	0x59, 0x89, 0xea, 0x70, 0x29, 0x49, 0x2c, 0x32, 0x10, 0x5b, 0x94, 0x18, 0x34, 0x18, 0x0d, 0x18,
	0x93, 0xd8, 0xc0, 0x81, 0x67, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x73, 0xb9, 0x21, 0x1a, 0x4e,
	0x01, 0x00, 0x00,
}
